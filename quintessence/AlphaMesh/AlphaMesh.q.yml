methods:


  - name: area_contains_no_pixels
    type: bool
    static: true
    parameters:
      - name: bitmap
        type: ALLEGRO_BITMAP*
        default_argument: nullptr
      - name: x
        type: int
        default_argument: 0
      - name: y
        type: int
        default_argument: 0
      - name: w
        type: int
        default_argument: 0
      - name: h
        type: int
        default_argument: 0
    body: |
      const float ALPHA_THRESHOLD = 0.0001f;
      for (int yy=y; yy<=y+h; yy++)
      {
         for (int xx=x; xx<=x+w; xx++)
         {
            if (al_get_pixel(bitmap, xx, yy).a >= ALPHA_THRESHOLD) return false;
         }
      }
      return true;


  - name: process
    type: AllegroFlare::TileMaps::TileMap<bool>
    static: true
    parameters:
      - name: bitmap
        type: ALLEGRO_BITMAP*
        default_argument: nullptr
      - name: num_rows
        type: int
        default_argument: 16
      - name: num_columns
        type: int
        default_argument: 16
    guards: [ bitmap, (num_rows >= 2), (num_columns >= 2) ]
    body: |
      AllegroFlare::TileMaps::TileMap<bool> result;
      result.resize(num_columns, num_rows);
      result.initialize();

      int bitmap_width = al_get_bitmap_width(bitmap);
      int bitmap_height = al_get_bitmap_height(bitmap);
      float cell_width_in_pixels = (float)bitmap_width / num_columns;
      float cell_height_in_pixels = (float)bitmap_height / num_rows;

      //int cell_width_in_pixels = bitmap_width / num_columns;
      //int cell_height_in_pixels = bitmap_height / num_rows;

      // TODO: Ensure there are no "remainder" pixels

      al_lock_bitmap(bitmap, ALLEGRO_PIXEL_FORMAT_ANY, ALLEGRO_LOCK_READONLY);

      bool last_row = false;
      for (int tile_y=0; tile_y<num_rows; tile_y++)
      {
         for (int tile_x=0; tile_x<num_columns; tile_x++)
         {
            float x_pos = tile_x * cell_width_in_pixels;
            float y_pos = tile_y * cell_height_in_pixels;

            bool is_empty = area_contains_no_pixels(
               bitmap,
               (int)x_pos,
               (int)y_pos,
               cell_width_in_pixels+1,
               cell_height_in_pixels+1
            );

            result.set_tile(tile_x, tile_y, !is_empty);
         }
      }

      al_unlock_bitmap(bitmap);

      return result;


dependencies:


  - symbol: AllegroFlare::TileMaps::TileMap
    headers: [ AllegroFlare/TileMaps/TileMap.hpp ]
  - symbol: ALLEGRO_BITMAP
    headers: [ allegro5/allegro.h ]


